本章介绍LuatOS的sfud库使用方式
This chapter describes how to use the sfud library for LuatOS
成功初始化sfud之后，我们有两种方式对Flash进行读写，一种是直接对Flash的特定地址进行读写数据，一种是将挂载sfud lfs文件系统，然后使用Lua io api对挂载位置进行读写
After sfud is successfully initialized, we have two ways to read and write Flash, one is to directly read and write data to the specific address of Flash, the other is to mount the sfud lfs file system, and then use Lua io api to read and write the mount location.
初始化
Initialization
初始化过程会有类似如下日志输出
The initialization process will have a log output similar to the following
初始化sfud成功后，需要获取flash设备信息表，这也是一个抽象的flash对象，在后续的读写中需要传递这个flash对象
After sfud is initialized successfully, you need to obtain the flash device information table, which is also an abstract flash object, and this flash object needs to be passed in subsequent reading and writing.
代码如下
The code is as follows
读写
Read and write
挂载sfud lfs文件系统
mount the sfud lfs file system
获取flash设备信息表
obtain the flash device information table.
简介
Introduction
接口文档可参考：[sfud库
Interface documentation can be referred to:[sfud library
接线示意
Wiring Schematic
开发板
Development Board
可以看到，`/sfud`挂载点 的Flash容量为
As you can see, the Flash capacity of the `/sfud` mount point is
可以正常读出我们之前写入的内容
We can read what we wrote before normally.
日志如下
The log is as follows
软件部分
Software part
使用SPI DEVICE初始化
Initialization using SPI DEVICE
使用SPI ID初始化
Initialize with SPI ID
是一款开源的串行 SPI Flash 通用驱动库，LuatOS中集成了该库，可以调用sfud的api实现对各类SPI Flash的读写操作
It is an open source serial SPI Flash universal driver library, which is integrated in LuatOS and can call sfud api to read and write various SPI Flash
完整代码
Full Code
文件不存在或文件输入格式不正确
File does not exist or file input format is incorrect
文件创建失败
File creation failed
我们可以创建一个文件写入再读出
We can create a file to write and read
向地址1024写入字符串
Write a string to an address 1024
硬件准备
Hardware preparation
这里使用
Use here
之后就可以使用Lua中的io api在/sfud下进行读写操作了
After that, you can use io api in Lua to read and write under/sfud
直接对特定地址进行读写
Read and write directly to a specific address
最后一个参数工作模式选择半双工
Last parameter Operating mode selection Half duplex
