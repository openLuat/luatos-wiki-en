之前的版本使用 7g格式化浮动数
Previous versions used 7g to format floating numbers
传入值类型|解释
Incoming Value Type | Explanation
例子
Examples
参数
Parameters
反序列化后的对象(通常是table), 失败的话返回
The deserialized object (usually a table), which is returned if it fails.
反序列化失败的报错信息
Error message of deserialization failure
将字符串反序列化为对象
Deserialize a string into an object
将对象序列化为json字符串
Serialize an object to a json string
已适配
Adapted
序列化后的json字符串, 失败的话返回
the json string after serialization. if it fails, it is returned
序列化失败的报错信息
error message of serialization failure
成功返回1,否则返回
Returns 1 on success, otherwise
本库有专属demo，[点此链接查看json的demo例子
This library has its own demo,[click this link to view the demo example of json
本页文档由[这个文件](https://gitee.com/openLuat/LuatOS/tree/master/luat/../components/lua-cjson/lua_cjson.c)自动生成。如有错误，请提交issue或帮忙修改后pr，谢谢
This page document is automatically generated by [this file](https://gitee.com/openLuat/LuatOS/tree/master/luat/../components/lua-cjson/lua_cjson.c). If there is any error, please submit issue or help modify pr, thank you
浮点数用%.12f的方式转换为字符串
Floating point numbers are converted to strings using%.12f
浮点数用%.7g的方式转换为字符串
Floating-point numbers are converted to strings using%.7g.
浮点数精度和模式,这项不存在的时候,为默认值"7f",数字只支持"0~14",模式只支持
Floating-point number precision and mode, when this does not exist, the default value is "7f", numbers only support "0~14", mode only supports
浮点数精度和模式,这项不存在的时候,为默认值"7g",数字只支持"0~14",模式只支持
Floating-point number precision and mode, when this does not exist, the default value is "7g", numbers only support "0~14", mode only support
生成和解析库
Generating and parsing libraries
起, 默认使用7f格式化浮点数
Since then, 7f is used by default to format floating point numbers.
返回值
Return Value
返回值类型|解释
return value type | explanation
需要反序列化的json字符串
The json string that needs to be deserialized.
需要序列化的对象
Objects that need to be serialized