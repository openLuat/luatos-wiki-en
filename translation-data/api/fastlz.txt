本页文档由[这个文件](https://gitee.com/openLuat/LuatOS/tree/master/luat/../components/fastlz/luat_lib_fastlz.c)自动生成。如有错误，请提交issue或帮忙修改后pr，谢谢
This page document is automatically generated by [this file](https://gitee.com/openLuat/LuatOS/tree/master/luat/../components/fastlz/luat_lib_fastlz.c). If there is any error, please submit issue or help modify pr, thank you
参数
Parameters
传入值类型|解释
Incoming Value Type | Explanation
待解压的数据
Data to be compressed
待压缩的数据, 少于400字节的数据不建议压缩, 且压缩后的数据不能大于
The data to be compressed. It is not recommended to compress data less than 400 bytes, and the compressed data cannot be larger
的 字符串相当于有长度的char[],可存放包括0x00的一切数据
The string of is equivalent to char[] with length, which can store all data including 0x 00
返回值
Return Value
返回值类型|解释
return value type | explanation
检查压缩前后的数据大小
Check data size before and after compression
解压, 得到原文
Decompress to get the original text
解压后的最大大小, 默认是4k, 可按需调整
The maximum size after decompression, the default is 4k, can be adjusted as needed
快速解压
Fast Decompression
快速压缩
fast compression
例子
Examples
内存, 原始数据的大小的1.05倍,最小占用1024字节
Memory, 1.05 times the size of the original data, minimum 1024 bytes
内存需求量小很多, miniz库接近200k, fastlz只需要32k+原始数据大小
The memory requirement is much smaller, miniz library is close to 200k, fastlz only needs 32k original data size
若解压成功,返回数据字符串, 否则返回
If the decompression is successful, return the data string, otherwise return
若压缩成功,返回数据字符串, 否则返回
If the compression is successful, return the data string, otherwise return
示例
Example
无
None
系统内存, 固定
System memory, fixed
压缩
Compression
压缩比, miniz的压缩比要好于
compression ratio, the compression ratio of miniz is better
压缩级别,默认1, 可选1或者2, 2的压缩比更高(有时候
Compression level, default 1, optional 1 or 2, 2 compression ratio is higher (sometimes
压缩之
compressed
已适配
Adapted
与miniz库的差异
Differences with the miniz library
注意, 压缩过程的内存消耗如下
Note that the memory consumption of the compression process is as follows
准备好数据
Prepare the data