与mcu.ticks()的区别是,底层计数器是64bit的, 在可预计的将来不会溢出
The difference with mcu.ticks() is that the underlying counter is 64bit and will not overflow in the foreseeable future
与参考值比较,如果大于等于为true,反之为
Compared with the reference value, if greater than or equal to true, otherwise.
主频,根据设备的不同有不同的有效值,请查阅手册
The main frequency has different effective values according to different equipment, please refer to the manual
以 Air780EP 为例
Take Air780EP for example
传入值类型|解释
Incoming Value Type | Explanation
位掩码,可以对特定几个位置的bit做修改, 默认0xffffffff,修改全部
Bit mask, you can modify the bit in specific locations, the default is 0xffffffff, modify all
低速32K是否使用外部时钟源,如果为空则不改变
Whether the low-speed 32K uses an external clock source, if it is empty, it will not change
低速32K晶振参考时钟是否输出
Does the low-speed 32K crystal reference clock output
例子
Examples
写入的值,如果没有,则直接返回当前值
The value written, if not, the current value is returned directly.
参数
Parameters
参考值,可选项,如果为0,则返回结果中第一个项目为
Reference value, optional, if 0, the first item in the returned result is
号，如果留空不写，则表示清除配置，使用平台的默认配置。具体看平台的IOMUX复用表
No., if left blank, it means to clear the configuration and use the default configuration of the platform. Specifically look at the platform's IOMUX multiplexing table.
在外设打开前，将外设IO复用到非默认配置上，目前只支持Air780E的部分外设复用到其他配置，这是一个临时接口，如果后续有更合适的api，本接口将不再更新
Before the peripheral is opened, the peripheral IO is multiplexed to the non-default configuration. Currently, only some Air780E peripherals are supported to be multiplexed to other configurations. This is a temporary interface. If there is a more suitable api in the future, this interface will not be updated.
处理模式，0死机停机，1死机后重启，2死机后尽量将错误信息提交给外部工具后重启
Processing mode: 0 crash and stop, 1 crash and restart, 2 crash and try to submit error information to external tools and restart
复用到
Reuse
复用功能序号，0~N。具体看平台的IOMUX复用表
Serial number of multiplexing function, 0 ~ N. Specifically look at the platform's IOMUX multiplexing table.
外设功能复用选择，注意普通MCU是以GPIO号为序号，但是专用SOC，比如CAT1的，是以PAD号为序号。本函数不是所有平台适用
Peripheral function multiplexing selection, note that the common MCU uses GPIO number as the serial number, but the dedicated SOC, such as CAT1, uses PAD number as the serial number. This function is not applicable to all platforms
外设类型
Peripheral Type
外设类型-串口
Peripheral Type-Serial
外设类型，目前只有
Peripheral type, currently only
外设类型，目前有mcu.UART,mcu.I2C,mcu.SPI,mcu.PWM,mcu.GPIO,mcu.I2S,mcu.LCD,mcu.CAM，具体需要看平台
Peripheral types, currently mcu.UART,mcu.I2C,mcu.SPI,mcu.PWM,mcu.GPIO,mcu.I2S,mcu.LCD,mcu.CAM, depending on the platform
如需不会溢出的值, 可用mcu.ticks32(), 于2024.5.7新增
If you need a value that will not overflow, you can use mcu.ticks32(), which was added in 2024.5.7.
寄存器或者ram地址
register or ram address
对0x2009FFFC地址上的值,修改bit0为
For the value at the 0x2009FFFC address, modify bit0
封装mcu一些特殊操作
encapsulation mcu some special operations
将GPIO46映射到
Map GPIO46
差值tick1 - tick2,如果超过了0x7fffffff,结果可能是错的
The difference tick1-tick2, if it exceeds 0 x7fffffff, the result may be wrong.
已适配
Adapted
常量
Constant
常量|类型|解释
constant | type | explanation
当前tick值
Current tick value
当前tick值,8个字节的uint64,如果支持64bit库,同时要求输出64bit结构的话,会输出9字节的
The current tick value, uint64 with 8 bytes, will output 9 bytes if the 64-bit library is supported and the 64-bit structure is required to be output at the same time
总线序号
Bus serial number
总线序号，0~N，如果是mcu.GPIO，则是GPIO号。具体看平台的IOMUX复用表
Bus serial number, 0 ~ N, if it is mcu.GPIO, it is GPIO number. Specifically look at the platform's IOMUX multiplexing table.
成功返回true,否则返回
Returns true on success, otherwise
所以本函数返回的值总是递增的, 而且32bit固件也能处理
Therefore, the value returned by this function is always incremented, and the 32bit firmware can also handle it.
支持设置成 2/40/80/160/240. 特别提醒, 设置到2M后, 如果要休眠, 必须先设置到
Support setting to 2/40/80/160/240. Special reminder, after setting to 2M, if you want to sleep, you must first set
新的配置，这个需要根据具体平台决定
The new configuration needs to be decided according to the specific platform.
无
None
是否是输入功能，true是，留空是
Whether it is an input function, true is, and blank is
是否输出bit64结构,true是,其他都是false,留空也是false,用于兼容旧的
Whether to output bit64 structure, true is, others are false, blank is also false, for compatibility with the old
晶振参考时钟输出
Crystal reference clock output
有几个tick,0表示未知
There are several ticks, 0 means unknown
本函数于2024.5.7新增
This function was added in 2024.5.7
本页文档由[这个文件](https://gitee.com/openLuat/LuatOS/tree/master/luat/modules/luat_lib_mcu.c)自动生成。如有错误，请提交issue或帮忙修改后pr，谢谢
This page document is automatically generated by [this file](https://gitee.com/openLuat/LuatOS/tree/master/luat/modules/luat_lib_mcu.c). If there is any error, please submit issue or help modify pr, thank you
根据mode的不同,返回值的含义不同
The return value has different meanings depending on the mode
模式, 看后面的用法说明
mode, see the following instructions
模式可选值 及 对应的返回值
Mode optional values and corresponding return values
死机后停机，一般用于调试状态
Shutdown after crash, generally used for debugging status
死机后尽量将错误信息提交给外部工具后重启，一般用于压力测试或者正式产品
After the crash, try to submit the error information to an external tool and restart it, generally used for stress testing or official products.
死机后重启，一般用于正式产品
Restart after crash, generally used for official products
死机时处理模式，目前只有EC618平台适用
Processing mode in case of crash, currently only applicable to EC618 platform
每秒的tick数量,通常为
The number of ticks per second, typically
注意: 并非所有模块都支持主频调整,请查阅手册
Note: Not all modules support frequency adjustment, please refer to the manual
的
of
的I2C0复用到gpio12和
of I2C0 multiplexed to gpio12 and
的I2C0复用到gpio16和
The I2C0 is multiplexed to gpio16 and
的I2C1复用到gpio4和
of I2C1 multiplexing to gpio4 and
的UART2复用到gpio12和gpio13(Air780EG默认是这个复用，不要动
UART2 is multiplexed to gpio12 and gpio13(Air780EG default is this multiplexing, don't move
的UART2复用到gpio6和
UART2 is multiplexed to gpio6 and
稳定时间,在切换高速时钟的时候,根据硬件环境,需要delay一段时间等待PLL稳定,默认是1200,建议不小于
Stabilization time. When switching high-speed clocks, according to the hardware environment, it is necessary to delay for a period of time to wait for PLL to stabilize. The default is 1200, which is not less than recommended.
系列, Air105, 不支持设置主频
Series, Air105, does not support setting the main frequency
系列, 进入休眠模式时自动降频到
Series, automatically reduce the frequency to when entering sleep mode
系列支持设置成 40/80/160/240 , 需要2024.1.1之后的固件
Series support is set to 40/80/160/240, requiring firmware after 2024.1.1
若失败返回-1,否则返回主频数值,若等于0,可能处于32k晶振的省电模式
If it fails, return -1, otherwise return the main frequency value. If it is equal to 0, it may be in the power saving mode of 32k crystal oscillator.
获取主频,单位
Obtain the main frequency, unit
获取启动后的tick数,本身是无符号值,范围0~0xffffffff,lua是有符号计算,计算时超过0x7fffffff会变负数
Gets the number of ticks after startup. It is an unsigned value in the range of 0 to 0xffffffff. Lua is a signed calculation. If the value exceeds 0x7fffffff, the value becomes negative.
获取启动后的tick数,注意会出现溢出会出现负数
Get the tick number after startup, note that there will be overflow and negative numbers.
获取启动后的高精度tick，如果支持bit64库，可以直接输出转换好的bit64结构
Obtain the high-precision tick after startup. If the bit64 library is supported, the converted bit64 structure can be directly output.
获取每秒的tick数量
Get the number of ticks per second
获取设备唯一id. 注意,可能包含不可见字符,如需查看建议toHex()后打印
Obtain the unique id of the device. Note that it may contain invisible characters. If you need to view the recommended toHex(), print
获取高精度的计数
Get high-precision counts
计算2个64bit tick的差值
Calculate the difference between two 64bit ticks
设备唯一id.若不支持, 会返回空字符串
The unique device ID. If not, an empty string is returned.
设置主频,单位
Set main frequency, unit
设置到
Set
请注意,主频与外设主频有关联性, 例如主频2M时SPI的最高只能
Please note that the main frequency is related to the main frequency of peripherals. For example, when the main frequency is 2M, the highest SPI can only
读写mcu的32bit寄存器或者ram,谨慎使用写功能,请熟悉mcu的寄存器使用方法后再使用
To read and write the 32-bit register or RAM of the mcu, use the write function carefully. Please be familiar with the register usage of the mcu before using it.
转换10进制数为16进制字符串输出
Convert decimal number to hexadecimal string output
输出
Output
返回值
Return Value
返回值类型|解释
return value type | explanation
返回当前寄存的值
Returns the currently registered value
返回微秒数, 以秒为分割, 例如 1234567890us 返回2个值
Returns the number of microseconds, divided by seconds, for example 1234567890us returns 2 values
返回毫秒数, 以千秒为分割, 例如 1234567890ms 返回2个值
Returns the number of milliseconds, divided by thousands of seconds, for example, 1234567890ms returns two values
返回秒数,   以百万秒为分割, 例如 1234567890s  返回2个值
Returns the number of seconds, divided into millions of seconds, for example 1234567890s returns 2 values
还原成默认配置
Restore to default configuration
进制字符串
Hex String
选择时钟源,当前仅air105支持
Select clock source, currently only supported by air105
需要转换的值
Values that need to be converted
高速时钟使用外部时钟,低速32K使用外部晶振
High-speed clock using external clock, low-speed 32K using external crystal
高速时钟是否使用外部时钟源,如果为空则不改变
Whether the high-speed clock uses an external clock source, and does not change if it is empty
高速晶振参考时钟是否输出
Whether the reference clock of high-speed crystal oscillator is output
高速晶振参考时钟输出,低速32K不输出
High-speed crystal reference clock output, low-speed 32K does not output