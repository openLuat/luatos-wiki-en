不需要调用i2c.close接口
No need to call the i2c.close interface
从i2c0读取
Read from i2c0
从i2c1的地址为0x5C的设备的寄存器0x01写入2个字节的数据
Write 2 bytes of data from register 0x 01 of device with address 0x5C of i2c1
从i2c1的地址为0x5C的设备的寄存器0x01读出2个字节的数据
Read 2 bytes of data from register 0x 01 of the device with address 0x5C of i2c1
从i2c1读取2个字节的数据
Read 2 bytes of data from i2c1
从i2c总线读取DHT12的温湿度数据
Read temperature and humidity data of DHT12 from i2c bus
从i2c总线读取DHT30的温湿度数据(由"好奇星"贡献
Read temperature and humidity data of DHT30 from i2c bus (contributed by "Hour Star"
传入值类型|解释
Incoming Value Type | Explanation
传输完成后回调的消息
Message for callback after transfer completes
低速
Low speed
例子
Examples
关闭
Close
关闭i2c设备
Turn off the i2c device
写寄存器数据
Write register data
初始化
Initialization
初始化软件
Initialize software
参数
Parameters
发送0x00，然后接收1个字节，典型应用各种传感器
Send 0x 00, then receive 1 byte, typical application of various sensors
发送0x01， 0x02，0x03，不接收数据，如果是eeprom，就是往0x01的地址写02和03，或者往0x0102的地址写03，看具体芯片了
Send 0x 01, 0x 02,0x 03, do not receive data, if it is eeprom, write 02 and 03 to the address of 0x 01, or write 03 to the address of 0x 0102, depending on the specific chip.
发送0x01， 0x02，然后接收1个字节，典型应用就是
Send 0x 01, 0x 02, and then receive 1 byte. A typical application is
发送数据
Send data
发送是否成功
Whether the sending was successful
只发送txbuff里的数据，不接收数据，典型应用就是写寄存器了，这里寄存器地址和值都放在了txbuff里
Only send data in txbuff, not receive data. A typical application is to write registers, where register addresses and values are placed in txbuff
可选参数 是否发送停止位 1发送 0不发送 默认发送(105不支持
Optional parameter whether to send stop bit 1 send 0 does not send default send (105 not supported
如果参数5是interger，则返回接收到的数据
If parameter 5 is interger, the received data is returned
如需判断i2c id是否合法, 请使用 i2c.exist 函数
To determine whether the i2c id is valid, use the i2c.exist function
子设备的地址, 7位地址
Address of the sub-device, 7-bit address
存在
Existence
存在就返回true,否则返回
Returns true if it exists, otherwise it returns
寄存器地址
register address
已适配
Adapted
常量
Constant
常量|类型|解释
constant | type | explanation
引脚编号(GPIO编号
Pin number (GPIO number
当前无返回值
No current return value
往i2c0发送1个字节的数据
Send 1 byte of data to i2c0
往i2c1发送2个字节的数据
Send 2 bytes of data to i2c1
待发送的数据
Data to be sent
待发送的数据,自适应参数类型
Data to be sent, adaptive parameter type
待发送的数据,自适应参数类型，如果为nil，则不发送数据
The data to be sent. The adaptive parameter type. If the parameter is nil, no data is sent.
待发送的数据，由于用的非阻塞模型，为保证动态数据的有效性，只能使用zbuff，发送的数据从zbuff.addr开始，长度为
The data to be sent, due to the non-blocking model, can only use zbuff to ensure the validity of dynamic data. The data to be sent starts with zbuff.addr and has a length
待接收数据的zbuff 如果不用zbuff，则接收数据将在return返回
If the zbuff of the data to be received is not used, the received data will be returned in return.
待接收数据的zbuff，如果为nil，则忽略后面参数， 不接收数据。接收的数据会放在zbuff.addr开始的位置，会覆盖掉之前的数据，注意zhuff的预留空间要足够
The zbuff of the data to be received. If it is nil, the following parameters are ignored and no data is received. The received data will be placed at the beginning of zbuff.addr and will overwrite the previous data. note that zhuff has enough reserved space.
待接收的数据长度
Length of data to be received
成功就返回1,否则返回
Returns 1 on success, otherwise
扫描i2c设备
Scan for i2c devices
接收数据
Receive data
接收数据的长度
Length of received data
操作
Operation
收到的数据
Data received
新建一个软件i2c对象
Create a new software i2c object
无返回值
No return value
是否软件上拉, 默认不开启，需要硬件支持
Whether the software is pulled up, the default is not turned on, and hardware support is required.
有些BSP在指定addr无响应时会输出日志,导致输出会被打乱
Some BSPs output logs when addr is unresponsive, causing the output to be scrambled.
本函数于2023.07.04添加
This function was added on 2023.07.04
本库有专属demo，[点此链接查看i2c的demo例子
This library has its own demo,[click this link to view the demo example of i2c
本次传输是否正确启动，true，启动，false，有错误无法启动。传输完成会发布消息transfer_done_topic和boolean型结果
Whether this transmission is started correctly, true, start, false, and cannot be started with errors. Message transfer_done_topic and boolean results are published when the transfer is complete
本页文档由[这个文件](https://gitee.com/openLuat/LuatOS/tree/master/luat/modules/luat_lib_i2c.c)自动生成。如有错误，请提交issue或帮忙修改后pr，谢谢
This page document is automatically generated by [this file](https://gitee.com/openLuat/LuatOS/tree/master/luat/modules/luat_lib_i2c.c). If there is any error, please submit issue or help modify pr, thank you
检查i2c1是否存在
Check if i2c1 exists
正确就一定成功
Right is sure to succeed
每个操作的延时, 单位us, 默认
Delay of each operation, unit us, default
注意, 第3个参数是 2023.06.19 添加的
Note that the third parameter was added on 2023.06.19
注意！这个接口是软件模拟i2c，速度可能会比硬件的慢
Attention! This interface is a software simulation i2c, the speed may be slower than the hardware
温度值,单位0.1摄氏度, 例如 292 代表 29.2摄氏度
Temperature value in 0.1 degrees Celsius, for example, 292 represents 29.2 degrees Celsius
湿度值,单位0.1%, 例如 591 代表
Humidity value in 0.1%, for example 591
的设备地址,默认
device address, default
端口正确就一定成功
If the port is correct, it will be successful.
编号是否存在
Number Existence
设备addr,SHT30的设备地址,默认
Device addr, device address of SHT30, default
设备id, 例如i2c1的id为1, i2c2的id为
The device ID, for example, the ID of i2c1 is 1, and the ID of i2c2 is
读取成功返回true,否则返回
RETURNS ESS RETURNS TRUE, OTHERWISE RETURNS
读寄存器数据
Read register data
超时时间，如果填nil，则为
The timeout period. If nil is filled, it is
软件I2C对象|可当作i2c的id使用
Software I2C object | can be used as the id of i2c
返回值
Return Value
返回值类型|解释
return value type | explanation
这个函数的主要目标是为了在开发期扫描i2c设备
The main goal of this function is to scan i2c devices during development
通用传输，包括发送N字节，发送N字节+接收N字节，接收N字节三种功能，在发送转接收过程中发送reStart信号,解决类似mlx90614必须带restart信号，但是又不能用i2c.send来控制的，比如
General transmission includes three functions: sending n bytes, sending n bytes, receiving n bytes, and receiving n bytes. reStart signals are sent in the process of sending to receiving. to solve similar mlx90614, restart signals must be brought, but i2c.send cannot be used to control, for example
通过调整delay参数的值, 可增加或降低I2C的速度
Increase or decrease the speed of I2C by adjusting the value of the delay parameter
速度, 例如
Speed, for example
速度, 可选i2c.SLOW i2c.FAST i2c.PLUS i2c.HSMODE 默认为i2c.SLOW,如探测不到则修改此项
Speed, optional i2c.SLOW i2c.FAST i2c.PLUS i2c.HSMODE defaults to i2c.SLOW. If it cannot be detected, modify this item.
需要接收的数据长度，如果为0或nil，则不接收数据
The length of the data to be received. If it is 0 or nil, no data is received.
非阻塞通用传输，类似transfer，但是不会等到I2C传输完成才返回，调用本函数会立刻返回，I2C传输完成后，通过消息回调
Non-blocking general transmission, similar to transfer, but will not wait until I2C transmission is completed before returning, calling this function will return immediately, after I2C transmission is completed, through the message callback
高速
High speed